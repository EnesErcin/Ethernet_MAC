$date
	Wed Apr 19 15:59:27 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module async_fifo $end
$var wire 1 ! arst_n $end
$var wire 8 " data_in [7:0] $end
$var wire 1 # r_en $end
$var wire 1 $ rclk $end
$var wire 1 % rd_en $end
$var wire 1 & rempt $end
$var wire 1 ' w_en $end
$var wire 1 ( wclk $end
$var wire 9 ) wrt_ptr [8:0] $end
$var wire 1 * wr_srstn $end
$var wire 9 + read_ptr [8:0] $end
$var wire 1 , rd_srstn $end
$var wire 1 - full $end
$var wire 1 . empt $end
$var wire 8 / data_out [7:0] $end
$scope module async_bram $end
$var wire 8 0 data_in [7:0] $end
$var wire 1 $ rd_clk $end
$var wire 1 # rd_en $end
$var wire 1 ( wr_clk $end
$var wire 1 ' wr_en $end
$var wire 9 1 wrt_ptr [8:0] $end
$var wire 9 2 read_ptr [8:0] $end
$var reg 8 3 data_out [7:0] $end
$upscope $end
$scope module empt_gen $end
$var wire 9 4 wr_pointer [8:0] $end
$var wire 9 5 rd_pointer [8:0] $end
$var wire 1 - full $end
$var wire 1 . empty $end
$upscope $end
$scope module rd_pointer $end
$var wire 1 & empty $end
$var wire 1 $ rclk $end
$var wire 1 % rd_en $end
$var wire 1 6 rd_ready $end
$var wire 1 , rd_srstn $end
$var reg 9 7 read_ptr [8:0] $end
$upscope $end
$scope module rd_rst_scnch_m $end
$var wire 1 ( clk $end
$var wire 1 ! n_asignal $end
$var reg 1 , n_ssignal $end
$var reg 1 8 toggle $end
$upscope $end
$scope module wr_pointer $end
$var wire 1 9 full $end
$var wire 1 ( wclk $end
$var wire 1 % wr_en $end
$var wire 1 : wr_ready $end
$var wire 1 * wr_srstn $end
$var reg 9 ; wrt_ptr [8:0] $end
$upscope $end
$scope module wr_rst_scnch_m $end
$var wire 1 ( clk $end
$var wire 1 ! n_asignal $end
$var reg 1 * n_ssignal $end
$var reg 1 < toggle $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1<
bx ;
x:
x9
18
bx 7
x6
bx 5
bx 4
bx 3
bx 2
bx 1
bz 0
bx /
x.
x-
1,
bx +
1*
bx )
1(
z'
z&
z%
1$
z#
bz "
1!
$end
#1000
0(
#2000
b0 )
b0 1
b0 4
b0 ;
1(
#3000
0(
0$
#4000
1(
#5000
0(
#6000
09
0-
1.
b0 +
b0 2
b0 5
b0 7
1(
1$
#7000
0(
#8000
1(
#9000
0(
0$
#10000
1(
#11000
0(
#12000
1(
1$
#13000
0(
#14000
1(
#15000
0(
0$
#16000
1(
#17000
0(
#18000
1(
1$
#19000
0(
#20000
1(
#21000
0(
0$
#22000
1(
#23000
0(
#24000
1(
1$
#25000
0(
#26000
1(
#27000
0(
0$
#28000
1(
#29000
0(
#30000
1(
1$
#31000
0(
#32000
1(
#33000
0(
0$
#34000
1(
#35000
0(
#36000
1(
1$
#37000
0(
#38000
1(
#39000
0(
0$
#40000
1(
#41000
0(
#42000
1(
1$
#43000
0(
#44000
1(
#45000
0(
0$
#46000
1(
#47000
0(
#48000
1(
1$
#49000
0(
#50000
0<
08
1(
0!
#51000
0(
0$
#52000
06
0:
0,
0*
1(
#53000
0(
#54000
1(
1$
#55000
0(
#56000
1(
#57000
0(
0$
#58000
1(
#59000
0(
#60000
1(
1$
#61000
0(
#62000
1(
#63000
0(
0$
#64000
1(
#65000
0(
#66000
1(
1$
#67000
0(
#68000
1(
#69000
0(
0$
#70000
1(
#71000
0(
#72000
1(
1$
#73000
0(
#74000
1(
#75000
0(
0$
#76000
1(
#77000
0(
#78000
1(
1$
#79000
0(
#80000
1(
#81000
0(
0$
#82000
1(
#83000
0(
#84000
1(
1$
#85000
0(
#86000
1(
#87000
0(
0$
#88000
1(
#89000
0(
#90000
1(
1$
#91000
0(
#92000
1(
#93000
0(
0$
#94000
1(
#95000
0(
#96000
1(
1$
#97000
0(
#98000
1(
#99000
0(
0$
#100000
1(
#101000
0(
#102000
1(
1$
#103000
0(
#104000
1(
#105000
0(
0$
#106000
1(
#107000
0(
#108000
1(
1$
#109000
0(
#110000
1(
#111000
0(
0$
#112000
1(
#113000
0(
#114000
1(
1$
#115000
0(
#116000
1(
#117000
0(
0$
#118000
1(
#119000
0(
#120000
1(
1$
#121000
0(
#122000
1(
#123000
0(
0$
#124000
1(
#125000
0(
#126000
1(
1$
#127000
0(
#128000
1(
#129000
0(
0$
#130000
1(
#131000
0(
#132000
1(
1$
#133000
0(
#134000
1(
#135000
0(
0$
#136000
1(
#137000
0(
#138000
1(
1$
#139000
0(
#140000
1(
#141000
0(
0$
#142000
1(
#143000
0(
#144000
1(
1$
#145000
0(
#146000
1(
#147000
0(
0$
#148000
1(
#149000
0(
#150000
1(
1$
#151000
0(
#152000
1(
#153000
0(
0$
#154000
1(
#155001
