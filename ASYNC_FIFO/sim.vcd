$date
	Fri Apr 28 15:05:54 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module async_fifo $end
$var wire 1 ! arst_n $end
$var wire 8 " data_in [7:0] $end
$var wire 1 # full $end
$var wire 1 $ r_en $end
$var wire 1 % rclk $end
$var wire 1 & w_en $end
$var wire 1 ' wclk $end
$var wire 4 ( wrt_ptr [3:0] $end
$var wire 1 ) wr_srstn $end
$var wire 4 * read_ptr [3:0] $end
$var wire 1 + rd_srstn $end
$var wire 1 , full_gen $end
$var wire 1 - empt $end
$var wire 8 . data_out [7:0] $end
$scope module async_bram $end
$var wire 8 / data_in [7:0] $end
$var wire 1 # full $end
$var wire 1 % rd_clk $end
$var wire 1 $ rd_en $end
$var wire 1 ' wr_clk $end
$var wire 1 & wr_en $end
$var wire 4 0 wrt_ptr [3:0] $end
$var wire 3 1 w_ptr [2:0] $end
$var wire 4 2 read_ptr [3:0] $end
$var wire 3 3 r_ptr [2:0] $end
$var reg 8 4 data_out [7:0] $end
$upscope $end
$scope module empt_gen $end
$var wire 4 5 wr_pointer [3:0] $end
$var wire 4 6 rd_pointer [3:0] $end
$var wire 1 , full $end
$var wire 1 - empty $end
$upscope $end
$scope module rd_pointer $end
$var wire 1 - empty $end
$var wire 1 % rclk $end
$var wire 1 $ rd_en $end
$var wire 1 7 rd_ready $end
$var wire 1 + rd_srstn $end
$var reg 4 8 read_ptr [3:0] $end
$upscope $end
$scope module rd_rst_scnch_m $end
$var wire 1 % clk $end
$var wire 1 ! n_asignal $end
$var reg 1 + n_ssignal $end
$var reg 1 9 toggle $end
$upscope $end
$scope module wr_pointer $end
$var wire 1 # full $end
$var wire 1 ' wclk $end
$var wire 1 & wr_en $end
$var wire 1 : wr_ready $end
$var wire 1 ) wr_srstn $end
$var reg 9 ; wrt_ptr [8:0] $end
$upscope $end
$scope module wr_rst_scnch_m $end
$var wire 1 ' clk $end
$var wire 1 ! n_asignal $end
$var reg 1 ) n_ssignal $end
$var reg 1 < toggle $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 = i [31:0] $end
$upscope $end
$upscope $end
$scope module async_fifo $end
$scope module async_bram $end
$var reg 8 > \data_regs[0] [7:0] $end
$upscope $end
$upscope $end
$scope module async_fifo $end
$scope module async_bram $end
$var reg 8 ? \data_regs[1] [7:0] $end
$upscope $end
$upscope $end
$scope module async_fifo $end
$scope module async_bram $end
$var reg 8 @ \data_regs[2] [7:0] $end
$upscope $end
$upscope $end
$scope module async_fifo $end
$scope module async_bram $end
$var reg 8 A \data_regs[3] [7:0] $end
$upscope $end
$upscope $end
$scope module async_fifo $end
$scope module async_bram $end
$var reg 8 B \data_regs[4] [7:0] $end
$upscope $end
$upscope $end
$scope module async_fifo $end
$scope module async_bram $end
$var reg 8 C \data_regs[5] [7:0] $end
$upscope $end
$upscope $end
$scope module async_fifo $end
$scope module async_bram $end
$var reg 8 D \data_regs[6] [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
b111 =
1<
bx ;
x:
19
bx 8
x7
bx 6
bx 5
b0 4
bx 3
bx 2
bx 1
bx 0
bz /
b0 .
x-
x,
1+
bx *
1)
bx (
1'
z&
1%
z$
x#
bz "
1!
$end
#2000
0'
#4000
1'
0%
#6000
0'
#8000
1'
1%
#10000
0'
#12000
1'
0%
#14000
0'
#16000
1'
1%
#18000
0'
#20000
1'
0%
#22000
0'
#24000
1'
1%
#26000
0'
#28000
1'
0%
#30000
0'
#32000
1'
1%
#34000
0'
#36000
1'
0%
#38000
0'
#40000
1'
1%
#42000
0'
#44000
1'
0%
#46000
0'
#48000
1'
1%
#50000
09
0<
0'
0!
#52000
0:
0)
1'
0%
#54000
0'
#56000
07
0+
b0 1
b0 (
b0 0
b0 5
b0 ;
1'
1%
#58000
0'
#60000
1'
0%
#62000
0'
#64000
0#
0,
1-
b0 3
b0 *
b0 2
b0 6
b0 8
1'
1%
#66000
0'
#68000
1'
0%
#70000
0'
#72000
1'
1%
#74000
0'
#76000
1'
0%
#78000
0'
#80000
1<
19
1'
1%
1!
#82000
0'
#84000
1&
b11011001 "
b11011001 /
1:
1)
1'
0%
#86000
0'
#88000
b10101110 "
b10101110 /
x7
b11011001 >
1+
b1 1
0-
b1 (
b1 0
b1 5
b1 ;
1'
1%
#90000
0'
#92000
b10110 "
b10110 /
b10101110 ?
b10 1
b10 (
b10 0
b10 5
b10 ;
1'
0%
#94000
0'
#96000
b1101110 "
b1101110 /
b10110 @
b11 1
b11 (
b11 0
b11 5
b11 ;
1'
1%
#98000
0'
#100000
b111 "
b111 /
b1101110 A
b100 1
b100 (
b100 0
b100 5
b100 ;
1'
0%
#102000
0'
#104000
b11001101 "
b11001101 /
b111 B
b101 1
b101 (
b101 0
b101 5
b101 ;
1'
1%
#106000
0'
#108000
0:
0&
b11001101 C
b110 1
b110 (
b110 0
b110 5
b110 ;
1'
0%
#110000
0'
#112000
1'
1%
#114000
0'
#116000
1'
0%
#118000
0'
#120000
1'
1%
#122000
0'
#124000
1'
0%
#126000
0'
#128000
1'
1%
#130000
0'
#132000
1'
0%
#134000
0'
#136000
1'
1%
#138000
0'
#140000
1'
0%
#142000
0'
#144000
1'
1%
#146000
0'
#148000
1'
0%
#150000
0'
#152000
1'
1%
#154000
0'
#156000
1'
0%
#158000
0'
#160000
1'
1%
#162000
0'
#164000
1'
0%
#166000
0'
#168000
1'
1%
#170000
0'
#172000
1'
0%
#174000
0'
#176000
1'
1%
#178000
17
0'
1$
#180000
1'
0%
#182000
0'
#184000
b1 3
b11011001 .
b11011001 4
b1 *
b1 2
b1 6
b1 8
1'
1%
#186000
0'
#188000
1'
0%
#190000
0'
#192000
b10 3
b10 *
b10 2
b10 6
b10 8
b10101110 .
b10101110 4
1'
1%
#194000
0'
#196000
1'
0%
#198000
0'
#200000
b11 3
b10110 .
b10110 4
b11 *
b11 2
b11 6
b11 8
1'
1%
#202000
0'
#204000
1'
0%
#206000
0'
#208000
07
0$
b100 3
b100 *
b100 2
b100 6
b100 8
b1101110 .
b1101110 4
1'
1%
#210000
0'
#212000
1'
0%
#214000
0'
#216000
b0 .
b0 4
1'
1%
#218000
0'
#220000
1'
0%
#222000
0'
#224000
1'
1%
#226000
0'
#228000
1'
0%
#230000
0'
#232000
1'
1%
#234000
0'
#236000
1'
0%
#238000
0'
#240000
1'
1%
#242000
0'
#244000
1'
0%
#246000
0'
#248000
1'
1%
#250000
0'
#252000
1'
0%
#254000
0'
#256000
1'
1%
#258000
0'
#260000
1'
0%
#262000
0'
#264000
1'
1%
#266000
0'
#268000
1'
0%
#270000
0'
#272000
1'
1%
#274000
0'
#276000
1'
0%
#278001
